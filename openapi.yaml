openapi: 3.0.0
info:
  title: API Gestión Usuarios y Reportes
  description: API para registro, autenticación, administración de cuentas y reportes
  version: 1.0.0
servers:
  - url: /
  - url: https://localhost:8080
  - url: https://api.ejemplo.com/v1

components:
  schemas:
    Usuario:
      type: object
      properties:
        tpDocumento:
          type: string
          description: Tipo de documento del usuario
        documento:
          type: string
          description: Número de documento del usuario
        nombreCom:
          type: string
          description: Nombre completo del usuario
        fechaNacimiento:
          type: string
          format: date
          description: Fecha de nacimiento del usuario
        ciudadResidencia:
          type: string
          description: Ciudad de residencia del usuario
        direccion:
          type: string
          description: Dirección del usuario
        telefono:
          type: string
          description: Teléfono del usuario
        cargo:
          type: string
          description: Cargo del usuario
        estado:
          type: string
          enum: [Verificado, Rechazado, Resuelto]
          description: Estado de verificación del usuario
        correo:
          type: string
          format: email
          description: Correo electrónico del usuario
        preferencias:
          type: string
          description: Preferencias del usuario
        contraseña:
          type: string
          description: Contraseña del usuario

    Verificacion:
      type: object
      properties:
        codigoVerificacion:
          type: string
          description: Código de verificación del usuario

    Autenticacion:
      type: object
      properties:
        correo:
          type: string
          format: email
          description: Correo electrónico del usuario
        contraseña:
          type: string
          description: Contraseña del usuario

    ActualizacionCuenta:
      type: object
      properties:
        correo:
          type: string
          format: email
          description: Nuevo correo electrónico del usuario
        telefono:
          type: string
          description: Nuevo teléfono del usuario

    EliminacionCuenta:
      type: object
      properties:
        confirmacion:
          type: boolean
          description: Confirmación de eliminación de la cuenta

    Reporte:
      type: object
      properties:
        titulo:
          type: string
          description: Título del reporte
        limiteEdad:
          type: integer
          description: Límite de edad para el reporte
        descripcion:
          type: string
          description: Descripción del reporte
        ubicacion:
          type: string
          description: Ubicación del reporte
        importante:
          type: boolean
          description: Indica si el reporte es importante
        resuelto:
          type: boolean
          description: Indica si el reporte está resuelto
        imagenes:
          type: array
          items:
            type: string
            format: uri
            description: URLs de las imágenes asociadas al reporte
        categoria:
          type: string
          description: Categoría del reporte

    Comentario:
      type: object
      properties:
        usuarioId:
          type: string
          description: ID del usuario que hace el comentario
        reporteId:
          type: string
          description: ID del reporte que se comenta
        contenido:
          type: string
          description: Contenido del comentario
        fechaCreacion:
          type: string
          format: date-time
          description: Fecha de creación del comentario
        estado:
          type: string
          enum: [Activo, Inactivo, Borrado]
          description: Estado del comentario

    Notificacion:
      type: object
      properties:
        usuarioId:
          type: string
          description: ID del usuario que recibe la notificación
        titulo:
          type: string
          description: Título de la notificación
        categoria:
          type: string
          description: Categoría de la notificación
        contenido:
          type: string
          description: Contenido de la notificación
        leido:
          type: boolean
          description: Estado de la notificación (leído/no leído)
        fechaCreacion:
          type: string
          format: date-time
          description: Fecha de creación de la notificación

    VerificationRequest:
      type: object
      properties:
        email:
          type: string
          format: email
          example: "usuario@ejemplo.com"
        code:
          type: string
          example: "123456"

paths:
  /registro/usuario:
    post:
      summary: Registro usuario
      description: Registro de un nuevo usuario en el sistema
      operationId: registroUsuario
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Usuario'
      responses:
        "201":
          description: Registro exitoso y envío de código de verificación.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Registro exitoso y envío de código de verificación.

  /email:
    post:
      summary: Código verificación - envío
      description: Envío de correo con el código de verificación al usuario registrado
      operationId: codigoVerificacionEnvio
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Verificacion'
      responses:
        "200":
          description: Código enviado correctamente.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Código enviado correctamente.

  /auth:
    post:
      summary: Inicio sesión
      description: Autenticación de usuario por correo y contraseña
      operationId: inicioSesion
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Autenticacion'
      responses:
        "200":
          description: Inicio de sesión exitoso.
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: Token de autenticación
        "401":
          description: Credenciales incorrectas.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Credenciales incorrectas.

  /cuenta:
    patch:
      summary: Actualización cuenta
      description: Modificación de datos personales
      operationId: cuentaActualizacion
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActualizacionCuenta'
      responses:
        "200":
          description: Datos actualizados correctamente.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Datos actualizados correctamente.

    delete:
      summary: Eliminación cuenta
      description: Eliminación definitiva de la cuenta del usuario
      operationId: cuentaEliminacion
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EliminacionCuenta'
      responses:
        "200":
          description: Cuenta eliminada.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Cuenta eliminada.

  /reportes:
    post:
      summary: Creación reporte
      description: Creación de un nuevo reporte en el sistema
      operationId: reporteCreacion
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Reporte'
      responses:
        "201":
          description: Reporte creado exitosamente.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Reporte creado exitosamente.

  /reportes/{id}:
    patch:
      summary: Actualización reporte
      description: Modificación de un reporte existente
      operationId: reporteActualizacion
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            description: ID del reporte a actualizar
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Reporte'
      responses:
        "200":
          description: Reporte actualizado.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Reporte actualizado.

    delete:
      summary: Eliminación reporte
      description: Eliminación definitiva del reporte
      operationId: reporteEliminacion
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            description: ID del reporte a eliminar
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                confirmacion:
                  type: boolean
                  description: Confirmación de eliminación del reporte
      responses:
        "200":
          description: Reporte eliminado correctamente.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Reporte eliminado correctamente.

  /reportes/{id}/prioridad:
    patch:
      summary: Priorización reporte
      description: Marcado de un reporte como importante
      operationId: reportePriorizacion
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            description: ID del reporte a priorizar
      responses:
        "200":
          description: Reporte priorizado.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Reporte priorizado.

  /reportes/{id}/resolucion:
    patch:
      summary: Resolución reporte
      description: Cambio de estado a resuelto en reporte
      operationId: reporteResolucion
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            description: ID del reporte a resolver
      responses:
        "200":
          description: Reporte resuelto correctamente.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Reporte resuelto correctamente.

  /comentarios:
    post:
      summary: Creación comentario
      description: Creación de un nuevo comentario en un reporte
      operationId: comentarioCreacion
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comentario'
      responses:
        "201":
          description: Comentario creado exitosamente.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Comentario creado exitosamente.

  /comentario/{id}:
    patch:
      summary: Actualización comentario
      description: Modificación de un comentario existente
      operationId: comentarioActualizacion
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            description: ID del comentario a actualizar
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comentario'
      responses:
        "200":
          description: Comentario actualizado.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Comentario actualizado.

    delete:
      summary: Eliminación comentario
      description: Eliminación definitiva del comentario
      operationId: comentarioEliminacion
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            description: ID del comentario a eliminar
      responses:
        "200":
          description: Comentario eliminado correctamente.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Comentario eliminado correctamente.

  /comentario/usuario/{usuarioId}:
    get:
      summary: Obtener comentarios por usuario
      description: Obtiene todos los comentarios realizados por un usuario específico
      operationId: obtenerComentariosPorUsuario
      parameters:
        - name: usuarioId
          in: path
          required: true
          schema:
            type: string
            description: ID del usuario cuyos comentarios se desean obtener
      responses:
        "200":
          description: Comentarios obtenidos correctamente.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Comentario'

  /comentario:
    get:
      summary: Obtener todos los comentarios
      description: Obtiene todos los comentarios realizados por todos los usuarios
      operationId: obtenerTodosLosComentarios
      responses:
        "200":
          description: Todos los comentarios obtenidos correctamente.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Comentario'

  /notificacion:
    post:
      summary: Enviar notificación
      description: Enviar una notificación a un usuario o admin
      operationId: enviarNotificacion
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Notificacion'
      responses:
        "201":
          description: Notificación enviada correctamente.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Notificación enviada correctamente.

  /notificaciones/usuario/{usuarioId}:
    get:
      summary: Obtener notificaciones por usuario
      description: Obtiene todas las notificaciones enviadas a un usuario específico
      operationId: obtenerNotificacionesPorUsuario
      parameters:
        - name: usuarioId
          in: path
          required: true
          schema:
            type: string
            description: ID del usuario cuyas notificaciones se desean obtener
      responses:
        "200":
          description: Notificaciones obtenidas correctamente.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Notificacion'

  /notificaciones:
    get:
      summary: Obtener todas las notificaciones
      description: Obtiene todas las notificaciones enviadas a todos los usuarios y administradores
      operationId: obtenerTodasLasNotificaciones
      responses:
        "200":
          description: Todas las notificaciones obtenidas correctamente.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Notificacion'
  /suscripcion/noticias:
    post:
      summary: Suscripción a noticias
      description: Permite a un usuario suscribirse proporcionando su correo electrónico.
      operationId: suscripcionNoticias
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                correo:
                  type: string
                  format: email
                  description: Correo electrónico del usuario que desea suscribirse.
      responses:
        "200":
          description: Suscripción exitosa.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Suscripción realizada con éxito.
        "400":
          description: Solicitud incorrecta (correo inválido o faltante).
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: El correo es requerido.
        "500":
          description: Error interno al enviar el correo.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Error al enviar el correo.

  /api/auth/enviar-codigo:
    post:
      summary: Enviar código de verificación
      description: Envía un código de verificación de 6 dígitos al correo proporcionado.
      operationId: enviarCodigo
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: "usuario@ejemplo.com"
      responses:
        "200":
          description: Código enviado correctamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Código enviado correctamente
        "500":
          description: Error al enviar el código
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Error al enviar el código

  /api/auth/verificar-codigo:
    post:
      summary: Verificar código de verificación
      description: Verifica si el código ingresado es correcto y no ha expirado.
      operationId: verificarCodigo
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerificationRequest'
      responses:
        "200":
          description: Código verificado correctamente
          content:
            application/json:
              schema:
                type: string
                example: "Código verificado correctamente"
        "400":
          description: Código incorrecto o expirado
          content:
            application/json:
              schema:
                type: string
                example: "Código incorrecto o expirado"